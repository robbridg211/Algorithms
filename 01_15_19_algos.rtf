{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red154\green154\blue154;\red255\green255\blue254;\red0\green0\blue0;
\red0\green0\blue255;\red19\green120\blue72;\red144\green1\blue18;\red14\green110\blue109;}
{\*\expandedcolortbl;;\cssrgb\c66667\c66667\c66667;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c0\c0\c100000;\cssrgb\c3529\c53333\c35294;\cssrgb\c63922\c8235\c8235;\cssrgb\c0\c50196\c50196;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ////////////////////////////////// 01/15/2019 ALGOS /////////////////////////////////////////\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  twelveBarBlues() \{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 for\cf4 \strokec4 (\cf5 \strokec5 var\cf4 \strokec4  i = \cf6 \strokec6 1\cf4 \strokec4 ; i < \cf6 \strokec6 13\cf4 \strokec4 ; i++) \{\cb1 \
\cb3     console.log(i);\cb1 \
\cb3     console.log(\cf7 \strokec7 'chick'\cf4 \strokec4 );\cb1 \
\cb3     console.log(\cf7 \strokec7 'boom'\cf4 \strokec4 );\cb1 \
\cb3     console.log(\cf7 \strokec7 'chick'\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\cb3 twelveBarBlues();\cb1 \
\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  fibonacci(n)\{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 let\cf4 \strokec4  arr = [\cf6 \strokec6 0\cf4 \strokec4 , \cf6 \strokec6 1\cf4 \strokec4 ];\cb1 \
\cb3   \cf5 \strokec5 for\cf4 \strokec4  (\cf5 \strokec5 let\cf4 \strokec4  i = \cf6 \strokec6 2\cf4 \strokec4 ; i < n + \cf6 \strokec6 1\cf4 \strokec4 ; i++)\{\cb1 \
\cb3     arr.push(arr[i - \cf6 \strokec6 2\cf4 \strokec4 ] + arr[i -\cf6 \strokec6 1\cf4 \strokec4 ])\cb1 \
\cb3   \}\cb1 \
\cb3  \cf5 \strokec5 return\cf4 \strokec4  arr[n]\cb1 \
\cb3 \}\cb1 \
\
\cb3 fibonacci(\cf6 \strokec6 4\cf4 \strokec4 );\cb1 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  sumToOne(num) \{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 var\cf4 \strokec4  arr = (\cf7 \strokec7 ""\cf4 \strokec4 +num).split(\cf7 \strokec7 ""\cf4 \strokec4 ).map(\cf8 \strokec8 Number\cf4 \strokec4 );\cb1 \
\cb3   console.log(arr)\cb1 \
\cb3   num = \cf6 \strokec6 0\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 for\cf4 \strokec4 (\cf5 \strokec5 var\cf4 \strokec4  i = \cf6 \strokec6 0\cf4 \strokec4 ; i < arr.length; i++) \{\cb1 \
\cb3     num += arr[i]\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4 (num > \cf6 \strokec6 9\cf4 \strokec4 ) \{\cb1 \
\cb3     sumToOne(num)\cb1 \
\cb3   \} \cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4 (num < \cf6 \strokec6 9\cf4 \strokec4 ) \{\cb1 \
\cb3     console.log(num)\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  num;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\cb3 sumToOne(\cf6 \strokec6 928\cf4 \strokec4 ); \cf2 \strokec2 //returns 1\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  isPrime(num) \{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 for\cf4 \strokec4 (\cf5 \strokec5 var\cf4 \strokec4  i = \cf6 \strokec6 2\cf4 \strokec4 ; i < num; i++) \{\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4 (num % i === \cf6 \strokec6 0\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 return\cf4 \strokec4  num > \cf6 \strokec6 1\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\cb3 isPrime(\cf6 \strokec6 8\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  sweatshirtPricing(num) \{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4 (num === \cf6 \strokec6 1\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf5 \strokec5 var\cf4 \strokec4  cost = num * \cf6 \strokec6 20\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4 (num === \cf6 \strokec6 2\cf4 \strokec4 ) \{\cb1 \
\cb3     cost = num * \cf6 \strokec6 18.2\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4 (num === \cf6 \strokec6 3\cf4 \strokec4  ) \{\cb1 \
\cb3     cost = num * \cf6 \strokec6 16.2\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4 (num >= \cf6 \strokec6 4\cf4 \strokec4 ) \{\cb1 \
\cb3     cost = num * \cf6 \strokec6 13\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 Math\cf4 \strokec4 .ceil(cost);\cb1 \
\cb3 \}\cb1 \
\
\cb3 sweatshirtPricing(\cf6 \strokec6 5\cf4 \strokec4 )\cb1 \
\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  extractDigit(num, digitNum) \{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4 (digitNum < \cf6 \strokec6 0\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf5 \strokec5 var\cf4 \strokec4  newNum = ((num - \cf8 \strokec8 Math\cf4 \strokec4 .floor(num))*\cf6 \strokec6 100\cf4 \strokec4 )\cb1 \
\cb3     newNum = (\cf7 \strokec7 ""\cf4 \strokec4 +newNum).split(\cf7 \strokec7 ""\cf4 \strokec4 ).map(\cf8 \strokec8 Number\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4 (newNum[(digitNum*-\cf6 \strokec6 1\cf4 \strokec4 )-\cf6 \strokec6 1\cf4 \strokec4 ])\cb1 \
\cb3   \}\cb1 \
\cb3   num = \cf8 \strokec8 Math\cf4 \strokec4 .floor(num)\cb1 \
\cb3   \cf5 \strokec5 var\cf4 \strokec4  arr = (\cf7 \strokec7 ""\cf4 \strokec4 +num).split(\cf7 \strokec7 ""\cf4 \strokec4 ).map(\cf8 \strokec8 Number\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4 (digitNum >= arr.length) \{\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 for\cf4 \strokec4 (\cf5 \strokec5 var\cf4 \strokec4  i = \cf6 \strokec6 0\cf4 \strokec4 ; i < arr.length/\cf6 \strokec6 2\cf4 \strokec4 ; i++) \{\cb1 \
\cb3     temp = arr[i];\cb1 \
\cb3     arr[i] = arr[arr.length - \cf6 \strokec6 1\cf4 \strokec4  -i]\cb1 \
\cb3     arr[arr.length -\cf6 \strokec6 1\cf4 \strokec4 -i] = temp\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 return\cf4 \strokec4  arr[digitNum]\cb1 \
\cb3 \}\cb1 \
\cb3 extractDigit(\cf6 \strokec6 1824.2343\cf4 \strokec4 , \cf6 \strokec6 3\cf4 \strokec4 )\cb1 \
\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  sigDigit(num) \{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 var\cf4 \strokec4  arr = (\cf7 \strokec7 ""\cf4 \strokec4 +num).split(\cf7 \strokec7 ""\cf4 \strokec4 ).map(\cf8 \strokec8 Number\cf4 \strokec4 );\cb1 \
\cb3   console.log(arr)\cb1 \
\cb3     \cf5 \strokec5 for\cf4 \strokec4 (\cf5 \strokec5 var\cf4 \strokec4  i = \cf6 \strokec6 0\cf4 \strokec4 ; i < arr.length; i++) \{\cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4 (arr[i] > \cf6 \strokec6 0\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  arr[i]\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\cb3 sigDigit(\cf6 \strokec6 0.00987\cf4 \strokec4 )\cb1 \
\
\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \cb3 \strokec2 ////////// GAMING////////////////////////////////////\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  rollOne()\{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 return\cf4 \strokec4 (\cf8 \strokec8 Math\cf4 \strokec4 .floor((\cf8 \strokec8 Math\cf4 \strokec4 .random() * \cf6 \strokec6 6\cf4 \strokec4 ) + \cf6 \strokec6 1\cf4 \strokec4 ));\cb1 \
\cb3 \}\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  playFives(num)\{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 for\cf4 \strokec4 (\cf5 \strokec5 var\cf4 \strokec4  i = \cf6 \strokec6 0\cf4 \strokec4 ; i < num; i++) \{\cb1 \
\cb3     \cf5 \strokec5 var\cf4 \strokec4  roll = rollOne();\cb1 \
\cb3     console.log(roll)\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4 (roll === \cf6 \strokec6 5\cf4 \strokec4 ) \{\cb1 \
\cb3       console.log(\cf7 \strokec7 "That's good luck!"\cf4 \strokec4 )\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 return\cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  playStatistics(num) \{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 var\cf4 \strokec4  n = \cf6 \strokec6 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf5 \strokec5 var\cf4 \strokec4  current;\cb1 \
\cb3   \cf5 \strokec5 var\cf4 \strokec4  high = \cf6 \strokec6 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf5 \strokec5 var\cf4 \strokec4  sum = \cf6 \strokec6 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf5 \strokec5 var\cf4 \strokec4  low = \cf6 \strokec6 6\cf4 \strokec4 ;\cb1 \
\cb3   \cf5 \strokec5 while\cf4 \strokec4 (n < num) \{\cb1 \
\cb3     current = rollOne();\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4 (current > high) \{\cb1 \
\cb3       high = current;\cb1 \
\cb3     \}\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4 (current < low) \{\cb1 \
\cb3       low = current;\cb1 \
\cb3     \}\cb1 \
\cb3     console.log(current)\cb1 \
\cb3     sum += current;\cb1 \
\cb3     n++;\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 var\cf4 \strokec4  avg = sum / num;\cb1 \
\cb3   \cf5 \strokec5 return\cf4 \strokec4  (\cf7 \strokec7 'high: '\cf4 \strokec4 +high+\cf7 \strokec7 ', low: '\cf4 \strokec4 +low+\cf7 \strokec7 ', sum: '\cf4 \strokec4 +sum+\cf7 \strokec7 ', avg: '\cf4 \strokec4 +avg)\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \cb3 \strokec2 //////END OF GAMING////////////////////////////////////\cf4 \cb1 \strokec4 \
}